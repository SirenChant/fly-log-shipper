[transforms.loki_json]
  type = "remap"
  inputs = ["log_json"]
  source = '''
  .level = .log.level
  del(.log)
  if (starts_with(.message, "{") && ends_with(.message, "}")) ?? false {
    # parse json messages
    json = object!(parse_json!(.message))
    del(.message)
    . |= json
  }
  '''

[transforms.elixir_log]
  type = "filter"
  inputs = ["loki_json"]
  condition = 'exists(.log_level)'

[transforms.not_elixir_log]
  type = "filter"
  inputs = ["loki_json"]
  condition = '!exists(.log_level)'  

[transforms.trans_elixir_log]
  type = "remap"
  inputs = ["elixir_log"]
  source = '''
  .level = .log_level
  del(.log_level)
  .event.provider = "service"
  '''

[sinks.loki]
  type = "loki"
  inputs = ["trans_elixir_log", "not_elixir_log"]  
  endpoint = "${LOKI_URL}"
  compression = "gzip"
  auth.strategy = "basic"
  auth.user = "${LOKI_USERNAME}"
  auth.password = "${LOKI_PASSWORD}"
  encoding.codec = "json"

  labels.event_provider = "{{event.provider}}"
  labels.fly_region = "{{fly.region}}"
  labels.fly_app_name = "{{fly.app.name}}"
  labels.fly_app_instance = "{{fly.app.instance}}"
  labels.host = "{{host}}"
  labels.level = "{{level}}"

